import fs from "fs/promises";
import { convertToMegas } from "./utils.js";

export async function createLogInFile(logMessage) {
  const path = new Date().toISOString().split("T")[0].replaceAll("/", "-");
  const nameFolder = "logs";
  const destinyPath = `${nameFolder}/${path}.log`;

  try {
    await fs.access(nameFolder);
    await fs.appendFile(destinyPath, logMessage);
  } catch (error) {
    if (error.code === "ENOENT") {
      try {
        await fs.mkdir(nameFolder);
        await fs.appendFile(destinyPath, logMessage);
      } catch (createError) {
        // console.error(`Error al crear el directorio '${nameFolder}': ${createError.message}`);
        return;
      }
    } else {
      // console.log(
      //   `Error al acceder al directorio '${nameFolder}': ${error.message}`
      // );
      return;
    }
  }
}

export const readFolder = async (size) => {
  const nameFolder = "./logs";
  try {
    const folder = await fs.readdir(nameFolder);
    let totalSize = 0;
    for (const file of folder) {
      const stats = await fs.stat(`${nameFolder}/${file}`);
      totalSize += stats.size;
    }

    const totalMegas = convertToMegas(totalSize).toFixed(2);
    if (totalMegas > size) {
      await deleteFiles(folder, nameFolder);
    }
  } catch (error) {
    console.log(error);
  }
};

const deleteFiles = async (files, nameFolder) => {
  try {
    const quantity = files.length;
    files.splice(quantity - 5);
    for (const file of files) {
      await fs.unlink(`${nameFolder}/${file}`);
    }
  } catch (error) {
    console.log(error);
  }
};
